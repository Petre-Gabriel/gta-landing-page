---
import {cva} from 'class-variance-authority';

export interface Props {
    variant?: 'primary' | 'secondary' | 'white' | 'plain';
    size?: 'base' | 'sm';
    className?: string;
    as?: 'button' | 'span';
}

const buttonVariants = cva("w-fit font-bold text-base md:text-lg xl:text-xl flex items-center gap-2 transition-all duration-200", {
    variants: {
        variant: {
            primary: 'bg-primary hover:bg-primary/75 text-white',
            secondary: 'border-2 border-primary text-primary hover:bg-primary hover:text-white',
            white: 'bg-white hover:bg-white/75 text-dark',
            plain: "text-white !px-0"
        },
        size: {
            base: 'px-6 py-3',
            sm: 'px-4 py-2 text-base lg:!text-lg'
        }
    }
});

const { variant = 'primary', size = 'base', className } = Astro.props;
const buttonClasses = buttonVariants({variant, size, className});

const ButtonTag = Astro.props.as ?? 'button';
---

<ButtonTag class={buttonClasses}>
    <slot />
</ButtonTag>